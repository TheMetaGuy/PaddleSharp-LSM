name: main
on:
  push:
    branches:
      - master
      - feature/linux
    paths:
      - 'src/**'
      - .github/workflows/main.yml
  workflow_dispatch:
  
jobs:
  run:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [windows-2022, ubuntu-22.04, ubuntu-22.04-arm, macos-13]
    steps:
    - uses: actions/checkout@v4
    - name: Setup NuGet Source
      run: |
        dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --name github --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
        dotnet nuget list source
    - name: Build code
      run: dotnet build -c Release
    - name: ldd debug(linux only)
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        cd ./tests/Sdcb.PaddleOCR.Tests/bin/Release/net8.0/runtimes/linux-x64/native
        ls -lR
        
        for so in $(find . -type f -name '*.so*'); do
          echo "================ $so ================"
          ldd "$so"
          echo
        done

    - name: rpath debug(linux only)
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        cd ./tests/Sdcb.PaddleOCR.Tests/bin/Release/net8.0/runtimes/linux-x64/native

        for so in $(find . -type f -name '*.so*'); do
          echo "================ $so ================"
          patchelf --print-rpath "$so" || true
          echo
        done

    - name: Match rpath(linux only)
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        cd ./tests/Sdcb.PaddleOCR.Tests/bin/Release/net8.0/runtimes/linux-x64
        patchelf --add-needed libmklml_intel.so libphi_core.so

        # for so in $(find . -type f -name '*.so*'); do
        #   echo "================ $so ================"
        #   patchelf --set-rpath '$ORIGIN' "$so" || true
        #   echo
        # done

        # for so in $(find . -type f -name '*.so*'); do
        #   echo "================ $so ================"
        #   patchelf --print-rpath "$so" || true
        #   echo
        # done

    - name: Test
      shell: bash
      run: |
        # export FLAGS_mklml_dir=${{ github.workspace }}/tests/Sdcb.PaddleOCR.Tests/bin/Release/net8.0/runtimes/linux-x64/native
        # export GLOG_v=4
        # if [[ "${{ matrix.runs-on }}" == "macos-15" ]]; then
        #   export FLAGS_use_system_allocator=1
        # fi

        if [[ "${{ runner.os }}" != "Windows" ]]; then
          dotnet test ./tests/Sdcb.PaddleOCR.Tests/Sdcb.PaddleOCR.Tests.csproj -c Release --no-build --verbosity normal --filter 'Category!=WindowsOnly'
        else
          dotnet test ./tests/Sdcb.PaddleOCR.Tests/Sdcb.PaddleOCR.Tests.csproj -c Release --no-build --verbosity normal
        fi
