name: push-native-nuget
on:
  push:
    branches:
      - master
      - feature/3.0
    paths:
      - .github/workflows/push-native-nuget.yml
  workflow_dispatch:

permissions:
  packages: write

env:
  PADDLE_VERSION: "3.0.0"
  
jobs:
  build-all:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - { title: win64.mkl,            rid: win-x64 }
          - { title: win64.openblas,       rid: win-x64 }
          - { title: win64.openblas-noavx, rid: win-x64 }
  
          - { title: win64.cu118_cudnn89_sm61,  rid: win-x64 }
          - { title: win64.cu118_cudnn89_sm75,  rid: win-x64 }
          - { title: win64.cu118_cudnn89_sm86,  rid: win-x64 }
          - { title: win64.cu118_cudnn89_sm89,  rid: win-x64 }

          - { title: win64.cu126_cudnn95_sm61,  rid: win-x64 }
          - { title: win64.cu126_cudnn95_sm75,  rid: win-x64 }
          - { title: win64.cu126_cudnn95_sm86,  rid: win-x64 }
          - { title: win64.cu126_cudnn95_sm89,  rid: win-x64 }

          - { title: win64.cu129_cudnn910_sm61,  rid: win-x64 }
          - { title: win64.cu129_cudnn910_sm75,  rid: win-x64 }
          - { title: win64.cu129_cudnn910_sm86,  rid: win-x64 }
          - { title: win64.cu129_cudnn910_sm89,  rid: win-x64 }
          - { title: win64.cu129_cudnn910_sm120, rid: win-x64 }
  
    steps:
    - name: Download Artifacts
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "arch=$(echo '${{ matrix.rid }}' | awk -F'-' '{print $NF}')" >> $GITHUB_ENV
        echo "Fetching latest successful run of branch ${{ github.ref_name }}"
        RUN_ID=$(gh run list -R ${{ github.repository }} \
                  --workflow=build-native-nuget.yml \
                  --branch=${{ github.ref_name }} \
                  --status=success --limit=1 \
                  --json databaseId | jq -r '.[0].databaseId')
        echo "Run id = $RUN_ID"
        
        echo "Download artifact ${{ matrix.title }}"
        gh run download -R ${{ github.repository }} $RUN_ID --name nuget-${{ matrix.artifact }} --dir nupkg-src

        echo "::group::Artifact tree"
        ls -lR nupkg-src
        echo "::endgroup::"

    # - name: Push nupkg to ProGet
    #   run: |
    #     dotnet nuget push ${{ env.NUPKG_PATH }} --source "https://proget.starworks.cc:88/nuget/test/v3/index.json" --api-key "${{ secrets.PROGET_API_KEY }}" --skip-duplicate --timeout 21600